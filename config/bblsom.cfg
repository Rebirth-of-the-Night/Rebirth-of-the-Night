# Configuration file

general {

    ##########################################################################################################
    # server options
    #--------------------------------------------------------------------------------------------------------#
    # Server-Side Options
    ##########################################################################################################

    "server options" {
        # Allows for additional customization of what blocks grass-like blocks can target and what blocks they convert into
        # Format: BlockID sourceBlock, BlockID convertBlock ; BlockID resultBlock, BlockID convertBlock ; BlockID resultBlock, ... (Multiple pairs allowed)
        # (Optional: add :metadata after a BlockID to specify metadata)
        # BlockID sourceBlock: the grass-like block that starts the conversion of other blocks
        # BlockID convertBlock: a block that the sourceBlock can target for conversion, non-repeatable per sourceBlock
        # BlockID resultBlock: the block that the convertBlock turns into after being converted by the sourceBlock, repeatable per sourceBlock
        S:"Additional Grass Spreading Settings" <
            
         >

        # Custom Boats to be registered
        # Format: String name, ItemID plankItem, int plankMeta, ItemID stickItem, int stickMeta
        # String name: the name of the item/boat to be registered
        # ItemID plankItem: The item id of the plank-like item to be dropped when the boat is broken dangerously
        # int plankMeta: The metadata of the plank-like item to be dropped when the boat is broken dangerously
        # ItemID stickItem: The item id of the stick-like item to be dropped when the boat is broken dangerously
        # int stickMeta: The metadata of the stick-like item to be dropped when the boat is broken dangerously
        S:"Custom Boat Entries" <
            
         >

        # Custom Buttons to be registered
        # Format: String name, Boolean wooden, int tickrate
        # String name: the name of the item/block to be registered
        # Boolean wooden: whether the button should be treated as wooden or not (Affects sound and tickrate)
        # int tickrate: tickrate override for the button, if left as 0 uses the vanilla handling based on wooden or not
        S:"Custom Button Entries" <
            
         >

        # Custom Dirt to be registered
        # Format: String name, Boolean supportsGeneralPlants, Boolean supportsSandyPlants, Boolean supportsMushrooms, BlockID farmlandBlock
        # String name: the name of the item/block to be registered
        # (Optional, default true) Boolean supportsGeneralPlants: if the dirt should support general plants growing on it
        # (Optional, default false) Boolean supportsSandyPlants: if the dirt should support sandy plants growing on it
        # (Optional, default false) Boolean supportsMushrooms: if the dirt should support mushrooms growing on it
        # (Optional, default disabled) BlockID farmlandBlock: the farmland block that the dirt should turn into upon hoe-ing
        S:"Custom Dirt Entries" <
            unknown_soil, true, false, true
         >

        # Custom Doors to be registered
        # Format: String name, Boolean wooden
        # String name: the name of the item/block to be registered
        # Boolean wooden: whether the door should be treated as wooden or not (Affects sound and redstone interaction)
        S:"Custom Door Entries" <
            
         >

        # Custom Falling Dirt to be registered
        # Format: String name, int dustColor, Boolean supportsGeneralPlants, Boolean supportsSandyPlants, Boolean supportsMushrooms
        # String name: the name of the item/block to be registered
        # int dustColor: decimal color value to be used for block falling particles
        # (Optional, default true) Boolean supportsGeneralPlants: if the dirt should support general plants growing on it
        # (Optional, default false) Boolean supportsSandyPlants: if the dirt should support sandy plants growing on it
        # (Optional, default false) Boolean supportsMushrooms: if the dirt should support mushrooms growing on it
        S:"Custom Falling Dirt Entries" <
            
         >

        # Custom Farmland to be registered
        # Format: String name, BlockID baseBlock, Float growthMult, Boolean alwaysFertile
        # String name: the name of the item/block to be registered
        # BlockID baseBlock: the block that the farmland reverts to
        # (Optional, default 1.0F) Float growthMult: the multiplier for speed of crops growing on the farmland
        # (Optional, default false) Boolean alwaysFertile: if the farmland should always be moisturized and fertile
        S:"Custom Farmland Entries" <
            
         >

        # Custom Grass to be registered
        # Format: String name, BlockID baseBlock, Boolean supportsGeneralPlants, Boolean supportsSandyPlants, Boolean supportsMushrooms, BlockID farmlandBlock
        # String name: the name of the item/block to be registered
        # BlockID baseBlock: the block that the grass converts to more grass, and reverts to
        # (Optional, default true) Boolean supportsGeneralPlants: if the dirt should support general plants growing on it
        # (Optional, default false) Boolean supportsSandyPlants: if the dirt should support sandy plants growing on it
        # (Optional, default false) Boolean supportsMushrooms: if the dirt should support mushrooms growing on it
        # (Optional, default disabled) BlockID farmlandBlock: the farmland block that the grass should turn into upon hoe-ing
        S:"Custom Grass Entries" <
            unknown_soilbed, bblsom:unknown_soil, true, false, true
         >

        # Custom Honey Blocks to be registered
        # Format: String name
        # String name: the name of the item/block to be registered
        S:"Custom Honey Block Entries" <
            block_honey
            block_brooding_silk
         >

        # Custom Horse Armors to be registered
        # Format: String name, int armorStrength
        # String name: the name of the armor to be registered
        # int armorStrength: the strength of the armor to be registered
        S:"Custom Horse Armor Entries" <
            
         >

        # Custom Leaves to be registered
        # Format: String name, ItemID saplingItem, Boolean decayable, ItemID fruitItem, float fruitChanceGeneral, float fruitChanceFruiting, boolean canGrow, float growthChance
        # String name: the name of the item/block to be registered
        # ItemID saplingItem: the sapling rarity item randomly dropped when leaves are broken
        # (Optional, default true) Boolean decayable: if the leaves should be allows to decay like vanilla
        # (Optional, default ignored) ItemID fruitItem: the fruit item randomly dropped when leaves are broken
        # (Optional, default 0.05F) Float fruitChanceGeneral: the chance when any type of leaves are broken to drop fruit
        # (Optional, default 1.0F) Float fruitChanceFruiting: the chance when fruiting leaves are broken to drop fruit
        # (Optional, default true) Boolean canGrow: if the leaves should be able to grow from default to flowering to fruiting when random ticked
        # (Optional, default 0.05F) Float growthChance: the chance when random ticked to grow the leaves
        S:"Custom Leaves Entries" <
            
         >

        # Custom Levers to be registered
        # Format: String name
        # String name: the name of the item/block to be registered
        S:"Custom Lever Entries" <
            
         >

        # Custom Litter to be registered
        # Format: String name, Boolean checkCanStay, double dropChance
        # String name: the name of the item/block to be registered
        # Boolean checkCanStay: if the litter should check if the soil can sustain it like flowers
        # Double dropChance: item drop chance per filled slice of litter
        S:"Custom Litter Entries" <
            wildflowers_west_kraired, true, 0.9
            wildflowers_north_kraired, true, 0.9
            wildflowers_atashum, true, 0.9
            wildflowers_haelat, true, 0.9
            wildflowers_rising_isles, true, 0.9
            wildflowers_rymoe, true, 0.9
            wildflowers_hailakand, true, 0.9
            wildflowers_mortarid, true, 0.9
            wildflowers_prektane, true, 0.9
            wildflowers_wanlonggu, true, 0.9
            paper, false, 1.0
            paper_w, false, 1.0
         >

        # Custom Mushroom to be registered
        # Format: String name, Boolean canGrowLarge, boolean rounded
        # String name: the name of the item/block to be registered
        # (Optional, default true) Boolean canGrowLarge: if the mushroom should be able to be turned into a large mushroom such as with bonemeal
        # (Optional, default false) Boolean rounded: if the large mushroom should be rounded like red mushrooms, or flat like brown mushrooms
        S:"Custom Mushroom Entries" <
            red_crown, true, false
            arzabals_veil, true, true
         >

        # Custom Pressure Plates to be registered
        # Format: String name, Boolean wooden
        # String name: the name of the item/block to be registered
        # Boolean wooden: whether the pressure plate should be treated as wooden or not (Affects sound and redstone interaction)
        # (Optional, default false) Boolean playerOnly: whether only players should be able to trigger the pressure plate
        S:"Custom Pressure Plate Entries" <
            
         >

        # Custom Signs to be registered
        # Format: String name
        # String name: the name of the item/block to be registered
        S:"Custom Sign Entries" <
            
         >

        # Custom Trap Doors to be registered
        # Format: String name, Boolean wooden
        # String name: the name of the item/block to be registered
        # Boolean wooden: whether the trap door should be treated as wooden or not (Affects sound and redstone interaction)
        S:"Custom Trap Door Entries" <
            
         >

        # Custom Weighted Pressure Plates to be registered
        # Format: String name, int maxWeight
        # String name: the name of the item/block to be registered
        # int maxWeight: max weight to trigger the pressure plate
        # (Optional, default false) Boolean playerOnly: whether only players should be able to trigger the pressure plate
        S:"Custom Weighted Pressure Plate Entries" <
            
         >
    }

}


